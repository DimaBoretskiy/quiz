const https = require("https");

const BOT_TOKEN = "7557010853:AAFj5GmKw5V3mKStf_m9w752vg0bPVy1PSw";
const BOT_API_URL = `https://api.telegram.org/bot${BOT_TOKEN}`;

function makeRequest(url) {
    return new Promise((resolve, reject) => {
        https.get(url, (res) => {
            let data = "";
            res.on("data", (chunk) => {
                data += chunk;
            });
            res.on("end", () => {
                try {
                    resolve(JSON.parse(data));
                } catch (error) {
                    reject(error);
                }
            });
        }).on("error", reject);
    });
}

async function getUpdates() {
    try {
        console.log("üîç –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞...");
        console.log("üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ –õ–Æ–ë–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º @quiztest12_bot");
        
        const result = await makeRequest(`${BOT_API_URL}/getUpdates`);
        
        if (result.ok && result.result.length > 0) {
            console.log("\nüì® –ù–∞–π–¥–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:");
            result.result.forEach((update, index) => {
                if (update.message) {
                    const { chat, from, text } = update.message;
                    console.log(`\n${index + 1}. –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: ${from.first_name} (@${from.username || "–±–µ–∑ username"})`);
                    console.log(`   Chat ID: ${chat.id}`);
                    console.log(`   –¢–µ–∫—Å—Ç: ${text || "–±–µ–∑ —Ç–µ–∫—Å—Ç–∞"}`);
                }
            });
            
            console.log("\nüéØ –í–∞—à Chat ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:");
            const lastMessage = result.result[result.result.length - 1];
            if (lastMessage.message) {
                console.log(`   ${lastMessage.message.chat.id}`);
            }
        } else {
            console.log("‚ùå –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
            console.log("üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞");
        }
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:", error);
    }
}

getUpdates();
